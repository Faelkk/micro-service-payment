version: '3.8'

services:

  db-product:
    image: postgres:15
    container_name: db-product
    environment:
      POSTGRES_DB: productdb
      POSTGRES_USER: sa
      POSTGRES_PASSWORD: ProductDbPassword!
    ports:
      - "5433:5432"   
    networks:
      - my-api-payment

  # Banco para Order (PostgreSQL)
  db-order:
    image: postgres:15
    container_name: db-order
    environment:
      POSTGRES_DB: orderdb
      POSTGRES_USER: sa
      POSTGRES_PASSWORD: OrderDbPassword!
    ports:
      - "5434:5432"   
    networks:
      - my-api-payment

  # Serviço de Produto
  product.services:
    container_name: product.service
    build: ./Product.Service
    networks:
      - my-api-payment
    depends_on:
      - db-product
    ports:
      - "5010:5010"
    environment:
      - APIPORT=5010
      - DB_HOST=db-product
      - DB_PORT=5432
      - DB_NAME=productdb
      - DB_USER=sa
      - DB_PASSWORD=ProductDbPassword!

  # Serviço de Pedido
  order.services:
    container_name: order.service
    build: ./Order.Service
    networks:
      - my-api-payment
    depends_on:
      - db-order
    ports:
      - "5011:5011"
    environment:
      - APIPORT=5011
      - DB_HOST=db-order
      - DB_PORT=5432
      - DB_NAME=orderdb
      - DB_USER=sa
      - DB_PASSWORD=OrderDbPassword!

  # Serviço de Pagamento
  payment.services:
    container_name: payment.service
    build: ./Payment.Service
    networks:
      - my-api-payment
    ports:
      - "5013:5013"
    environment:
      - APIPORT=5013
      - DB_HOST=db-payment
      - DB_PORT=5432
      - DB_NAME=paymentdb
      - DB_USER=sa
      - DB_PASSWORD=PaymentDbPassword!

  # API Gateway
  api.gateway:
    container_name: api.gateway
    build: ./ApiGateway.Ocelot
    ports:
      - "5012:5012"
    environment:
      - APIPORT=5012
    networks:
      - my-api-payment
    depends_on:
      - product.services
      - order.services
      - payment.services

networks:
  my-api-payment:
    driver: bridge